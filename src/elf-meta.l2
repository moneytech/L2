(;; ELF-64 Object File Format)

(;; Data representation: ELF64 Data Types)

(function elf64-addr (l r) [mk# $r #8])
(function elf64-off (l r) [mk# $r #8])
(function elf64-half (l r) [mk# $r #2])
(function elf64-word (l r) [mk# $r #4])
(function elf64-sword (l r) [mk# $r #4])
(function elf64-xword (l r) [mk# $r #8])
(function elf64-sxword (l r) [mk# $r #8])

(;; File header: ELF-64 Header)

(function elf64-ehdr (l r) [mk# $r #64])

(function e-ident (l r) [mk-field $l $r #0 #16])
(function e-type (l r) [mk-field $l $r #16 #2])
(function e-machine (l r) [mk-field $l $r #18 #2])
(function e-version (l r) [mk-field $l $r #20 #4])
(function e-entry (l r) [mk-field $l $r #24 #8])
(function e-phoff (l r) [mk-field $l $r #32 #8])
(function e-shoff (l r) [mk-field $l $r #40 #8])
(function e-flags (l r) [mk-field $l $r #48 #4])
(function e-ehsize (l r) [mk-field $l $r #52 #2])
(function e-phentsize (l r) [mk-field $l $r #54 #2])
(function e-phnum (l r) [mk-field $l $r #56 #2])
(function e-shentsize (l r) [mk-field $l $r #58 #2])
(function e-shnum (l r) [mk-field $l $r #60 #2])
(function e-shstrndx (l r) [mk-field $l $r #62 #2])

(;; File header: ELF Identification, e-ident)

(function ei-mag0 (l r) [mk-field $l $r #0 #1])
(function ei-mag1 (l r) [mk-field $l $r #1 #1])
(function ei-mag2 (l r) [mk-field $l $r #2 #1])
(function ei-mag3 (l r) [mk-field $l $r #3 #1])
(function ei-class (l r) [mk-field $l $r #4 #1])
(function ei-data (l r) [mk-field $l $r #5 #1])
(function ei-version (l r) [mk-field $l $r #6 #1])
(function ei-osabi (l r) [mk-field $l $r #7 #1])
(function ei-abiversion (l r) [mk-field $l $r #8 #1])

(function ei-pad (l r) [mk# $r #9])
(function ei-nident (l r) [mk# $r #16])

(function elfmag0 (l r) [mk# $r (hex 7F)])
(function elfmag1 (l r) [mk# $r (char E)])
(function elfmag2 (l r) [mk# $r (char L)])
(function elfmag3 (l r) [mk# $r (char F)])

(;; File header: Object File Classes, e-ident > ei-class)

(function elfclass32 (l r) [mk# $r #1])
(function elfclass64 (l r) [mk# $r #2])

(;; File header: Data Encodings, e-ident > ei-data)

(function elfdata2lsb (l r) [mk# $r #1])
(function elfdata3msb (l r) [mk# $r #2])

(;; File header: Operating System and ABI Identifiers, e-ident > ei-osabi)

(function elfosabi-sysv (l r) [mk# $r #0])
(function elfosabi-hpux (l r) [mk# $r #1])
(function elfosabi-standalone (l r) [mk# $r #255])

(;; File header: Object File Types, e-type)

(function et-none (l r) [mk# $r #0])
(function et-rel (l r) [mk# $r #1])
(function et-exec (l r) [mk# $r #2])
(function et-dyn (l r) [mk# $r #3])
(function et-core (l r) [mk# $r #4])
(function et-loos (l r) [mk# $r (hex FE00)])
(function et-hios (l r) [mk# $r (hex FEFF)])
(function et-loproc (l r) [mk# $r (hex FF00)])
(function et-hiproc (l r) [mk# $r (hex FFFF)])

(;; Sections: Section indicies)

(function shn-undef (l r) [mk# $r #0])
(function shn-loproc (l r) [mk# $r (hex FF00)])
(function shn-hiproc (l r) [mk# $r (hex FF1F)])
(function shn-loos (l r) [mk# $r (hex FF20)])
(function shn-hios (l r) [mk# $r (hex FF3F)])
(function shn-abs (l r) [mk# $r (hex FFF1)])
(function shn-common (l r) [mk# $r (hex FFF2)])

(;; Sections: Section header entries)

(function elf64-shdr (l r) [mk# $r #64])

(function sh-name (l r) [mk-field $l $r #0 #4])
(function sh-type (l r) [mk-field $l $r #4 #4])
(function sh-flags (l r) [mk-field $l $r #8 #8])
(function sh-addr (l r) [mk-field $l $r #16 #8])
(function sh-offset (l r) [mk-field $l $r #24 #8])
(function sh-size (l r) [mk-field $l $r #32 #8])
(function sh-link (l r) [mk-field $l $r #40 #4])
(function sh-info (l r) [mk-field $l $r #44 #4])
(function sh-addralign (l r) [mk-field $l $r #48 #8])
(function sh-entsize (l r) [mk-field $l $r #56 #8])

(;; Sections: Section Types)

(function sht-null (l r) [mk# $r #0])
(function sht-progbits (l r) [mk# $r #1])
(function sht-symtab (l r) [mk# $r #2])
(function sht-strtab (l r) [mk# $r #3])
(function sht-rela (l r) [mk# $r #4])
(function sht-hash (l r) [mk# $r #5])
(function sht-dynamic (l r) [mk# $r #6])
(function sht-note (l r) [mk# $r #7])
(function sht-nobits (l r) [mk# $r #8])
(function sht-rel (l r) [mk# $r #9])
(function sht-shlib (l r) [mk# $r #10])
(function sht-dynsym (l r) [mk# $r #11])
(function sht-loos (l r) [mk# $r (hex 60000000)])
(function sht-hios (l r) [mk# $r (hex 6FFFFFFF)])
(function sht-loproc (l r) [mk# $r (hex 70000000)])
(function sht-hiproc (l r) [mk# $r (hex 7FFFFFFF)])

(;; Sections: Section Attributes, sh-flags)

(function shf-write (l r) [mk# $r (hex 1)])
(function shf-alloc (l r) [mk# $r (hex 2)])
(function shf-execinstr (l r) [mk# $r (hex 4)])
(function shf-maskos (l r) [mk# $r (hex 0F000000)])
(function shf-maskproc (l r) [mk# $r (hex F0000000)])

(;; Symbol Table: ELF-64 Symbol Table Entry)

(function elf64-sym (l r) [mk# $r #24])

(function st-name (l r) [mk-field $l $r #0 #4])
(function st-info (l r) [mk-field $l $r #4 #1])
(function st-other (l r) [mk-field $l $r #5 #1])
(function st-shndx (l r) [mk-field $l $r #6 #2])
(function st-value (l r) [mk-field $l $r #8 #8])
(function st-size (l r) [mk-field $l $r #16 #8])

(;; Symbol Table: Symbol Bindings)

(function stb-local (l r) [mk# $r #0])
(function stb-global (l r) [mk# $r #1])
(function stb-weak (l r) [mk# $r #2])
(function stb-loos (l r) [mk# $r #10])
(function stb-hios (l r) [mk# $r #12])
(function stb-loproc (l r) [mk# $r #13])
(function stb-hiproc (l r) [mk# $r #15])

(function elf64-st-bind (l r) (`[>> (,[@fst $l]) #4]$r))
(function elf64-st-type (l r) (`[land (,[@fst $l]) #15]$r))
(function elf64-st-info (l r) (`[+ [<< (,[@fst $l]) #4] [land (,[@frst $l]) #15]]$r))

(;; Symbol Table: Symbol Types)

(function stt-notype (l r) [mk# $r #0])
(function stt-object (l r) [mk# $r #1])
(function stt-func (l r) [mk# $r #2])
(function stt-section (l r) [mk# $r #3])
(function stt-file (l r) [mk# $r #4])
(function stt-loos (l r) [mk# $r #10])
(function stt-hios (l r) [mk# $r #12])
(function stt-loproc (l r) [mk# $r #13])
(function stt-hiproc (l r) [mk# $r #15])

(;; Relocations: ELF-64 Relocation Entries)

(function elf64-rel (l r) [mk# $r #16])
(function elf64-rela (l r) [mk# $r #24])

(function r-offset (l r) [mk-field $l $r #0 #8])
(function r-info (l r) [mk-field $l $r #8 #8])
(function r-addend (l r) [mk-field $l $r #16 #8])

(function elf64-r-sym (l r) (`[>> (,[@fst $l]) #32]$r))
(function elf64-r-type (l r) (`[land (,[@fst $l]) (hex FFFFFFFF)]$r))
(function elf64-r-info (l r) (`[+ [<< (,[@fst $l]) #32] [land (,[@frst $l]) (hex FFFFFFFF)]]$r))

(;; System V Application Binary Interface: AMD64 Architecture Processor Supplement)

(;; Machine Information: Processor Identification)

(function em-x86-64 (l r) [mk# $r #62])

(;; Sections: Section Flags)

(function shf-x86-64-large (l r) [mk# $r (hex 10000000)])

(;; Sections: Section Types)

(function sht-x86-64-unwind (l r) [mk# $r (hex 70000001)])

(;; Relocation: Relocation Types)

(function r-x86-64-none (l r) [mk# $r #0])
(function r-x86-64-64 (l r) [mk# $r #1])
(function r-x86-64-pc32 (l r) [mk# $r #2])
(function r-x86-64-got32 (l r) [mk# $r #3])
(function r-x86-64-plt32 (l r) [mk# $r #4])
(function r-x86-64-copy (l r) [mk# $r #5])
(function r-x86-64-glob-dat (l r) [mk# $r #6])
(function r-x86-64-jump-slot (l r) [mk# $r #7])
(function r-x86-64-relative (l r) [mk# $r #8])
(function r-x86-64-gotpcrel (l r) [mk# $r #9])
(function r-x86-64-32 (l r) [mk# $r #10])
(function r-x86-64-32s (l r) [mk# $r #11])
(function r-x86-64-16 (l r) [mk# $r #12])
(function r-x86-64-pc16 (l r) [mk# $r #13])
(function r-x86-64-8 (l r) [mk# $r #14])
(function r-x86-64-pc8 (l r) [mk# $r #15])
(function r-x86-64-dtpmod64 (l r) [mk# $r #16])
(function r-x86-64-dtpoff64 (l r) [mk# $r #17])
(function r-x86-64-tposs64 (l r) [mk# $r #18])
(function r-x86-64-tlsgd (l r) [mk# $r #19])
(function r-x86-64-tlsld (l r) [mk# $r #20])
(function r-x86-64-dtpoff32 (l r) [mk# $r #21])
(function r-x86-64-gottpoff (l r) [mk# $r #22])
(function r-x86-64-tpoff32 (l r) [mk# $r #23])
(function r-x86-64-pc64 (l r) [mk# $r #24])
(function r-x86-64-gotoff64 (l r) [mk# $r #25])
(function r-x86-64-gotpc32 (l r) [mk# $r #26])
(function r-x86-64-size32 (l r) [mk# $r #32])
(function r-x86-64-size64 (l r) [mk# $r #33])
(function r-x86-64-gotpc32-tlsdesc (l r) [mk# $r #34])
(function r-x86-64-tlsdesc-call (l r) [mk# $r #35])
(function r-x86-64-tlsdesc (l r) [mk# $r #36])
(function r-x86-64-irelative (l r) [mk# $r #37])
(function r-x86-64-relative64 (l r) [mk# $r #38])
(function r-x86-64-gotpcrelx (l r) [mk# $r #41])
(function r-x86-64-rex-gotpcrelx (l r) [mk# $r #42])
