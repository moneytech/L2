(function " (l r) (with return
	{(continuation add-word (str index instrs)
		(if [emt? str]
			{return (`(with dquote:return
				(,[llst (` begin r) [llst (` storage r) (` dquote:str r)
						(with return {(continuation _ (phs num)
							(if num
								{_ [lst (` #0 r) phs r] [- num #1]}
								{return phs})) emt [+[/ index (unit)]#1]}) r]
					[meta:reverse [lst (`{dquote:return dquote:str}r) instrs r]r]r]))r)}
		
		(if (and [emt? [@fst str]] [emt? [@rst str]])
			{add-word [@rst str] [+ index #1]
				[lst (`[setb [+ dquote:str (,[value->literal index r])] #0]r) instrs r]}
				
		(if (and [emt? [@fst str]] [token? [@frst str]])
			{add-word [@rst str] [+ index #1]
				[lst (`[setb [+ dquote:str (,[value->literal index r])] #32]r) instrs r]}
		
		(if [emt? [@fst str]] {add-word [@rst str] index instrs}
				
		(if [token? [@fst str]]
			{add-word [lst [@rfst str] [@rst str] r] [+ index #1]
				[lst (`[setb [+ dquote:str (,[value->literal index r])]
					(,[char [lst [lst [@ffst str] emt r] emt r]r emt])]r) instrs r]}
			
			{add-word [@rst str] [+ index #1]
				[lst (`[setb [+ dquote:str (,[value->literal index r])] (,[@fst str])]r) instrs r]})))))) l #0 emt}))
